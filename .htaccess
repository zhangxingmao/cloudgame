# Enable URL rewriting
RewriteEngine On

# Set base options to improve performance
Options -Indexes +FollowSymLinks

# First, handle direct HTML access for game pages
# This ensures URLs like /games/action.html work directly
RewriteCond %{REQUEST_URI} ^/games/.*\.html$
RewriteCond %{REQUEST_FILENAME} -f
RewriteRule ^(.*)$ $1 [L,QSA]

# Handle clean URLs for games section
# If the requested URL does not have .html extension
RewriteCond %{REQUEST_URI} ^/games/([^/]+)/?$
RewriteCond %{REQUEST_URI} !\.html$
# And a corresponding .html file exists
RewriteCond %{DOCUMENT_ROOT}/games/%1.html -f
# Then rewrite to the .html version internally
RewriteRule ^games/([^/]+)/?$ /games/$1.html [L]

# Special fix for cloudgame.info domain access
RewriteCond %{HTTP_HOST} ^(www\.)?cloudgame\.info$ [NC]
RewriteCond %{REQUEST_URI} ^/games/([^/]+)$
RewriteCond %{DOCUMENT_ROOT}/games/%1.html -f
RewriteRule ^games/([^/]+)$ /games/$1.html [L]

# If the requested filename is not a directory
RewriteCond %{REQUEST_FILENAME} !-d
# If the requested filename is not a file
RewriteCond %{REQUEST_FILENAME} !-f
# If the request does not already end with .html
RewriteCond %{REQUEST_URI} !\.html$
# Only process if this is potentially a content page
RewriteCond %{REQUEST_URI} !\.(css|js|jpg|jpeg|png|gif|svg|ico|woff|woff2|ttf|json|map)$
# Then redirect to add .html extension
RewriteRule ^(.*)$ $1.html [L,QSA]

# Set default index file
DirectoryIndex index.html

# Handle www to non-www redirection
RewriteCond %{HTTP_HOST} ^www\.cloudgame\.info$ [NC]
RewriteRule ^(.*)$ https://cloudgame.info/$1 [L,R=301]

# Force HTTPS
RewriteCond %{HTTPS} off
RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]

# Enable CORS for necessary file types
<IfModule mod_headers.c>
    <FilesMatch "\.(html|css|js|json|jpg|jpeg|png|gif|webp|svg)$">
        Header set Access-Control-Allow-Origin "*"
    </FilesMatch>
</IfModule>

# Set character encoding
AddDefaultCharset UTF-8

# Enable gzip compression
<IfModule mod_deflate.c>
    # Compress HTML, CSS, JavaScript, Text, XML and fonts
    AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css application/javascript application/json
    
    # Remove browser bugs
    BrowserMatch ^Mozilla/4 gzip-only-text/html
    BrowserMatch ^Mozilla/4\.0[678] no-gzip
    BrowserMatch \bMSIE !no-gzip !gzip-only-text/html
</IfModule>

# Set browser cache time
<IfModule mod_expires.c>
    ExpiresActive On
    ExpiresByType image/jpg "access plus 1 year"
    ExpiresByType image/jpeg "access plus 1 year"
    ExpiresByType image/gif "access plus 1 year"
    ExpiresByType image/png "access plus 1 year"
    ExpiresByType image/svg+xml "access plus 1 year"
    ExpiresByType text/css "access plus 1 month"
    ExpiresByType application/javascript "access plus 1 month"
    
    # Reduced cache times for dynamic content
    ExpiresByType application/json "access plus 5 minutes"
    ExpiresByType text/html "access plus 10 minutes"
</IfModule>

# Cache-Control Headers
<IfModule mod_headers.c>
    # Cache images for 1 week
    <FilesMatch "\.(jpg|jpeg|png|gif|webp|svg|ico)$">
        Header set Cache-Control "max-age=604800, public"
    </FilesMatch>
    
    # Cache CSS, JavaScript for 1 day
    <FilesMatch "\.(css|js)$">
        Header set Cache-Control "max-age=86400, public"
    </FilesMatch>
    
    # Cache fonts for 1 week
    <FilesMatch "\.(woff|woff2|ttf|otf|eot)$">
        Header set Cache-Control "max-age=604800, public"
    </FilesMatch>
    
    # Cache HTML for 10 minutes
    <FilesMatch "\.(html|htm)$">
        Header set Cache-Control "max-age=600, public"
    </FilesMatch>
</IfModule>

# Security headers
<IfModule mod_headers.c>
    Header set X-Content-Type-Options "nosniff"
    Header set X-Frame-Options "SAMEORIGIN"
    Header set X-XSS-Protection "1; mode=block"
    Header set Referrer-Policy "strict-origin-when-cross-origin"
    Header set Permissions-Policy "camera=(), microphone=(), geolocation=()"
</IfModule>

# Custom error pages
ErrorDocument 404 /index.html

# Add mime types
AddType application/javascript .js
AddType text/css .css
AddType image/svg+xml .svg
AddType application/font-woff .woff
AddType application/font-woff2 .woff2

# Allow cross-origin for fonts
<FilesMatch "\.(ttf|ttc|otf|eot|woff|woff2|font\.css)$">
    <IfModule mod_headers.c>
        Header set Access-Control-Allow-Origin "*"
    </IfModule>
</FilesMatch> 